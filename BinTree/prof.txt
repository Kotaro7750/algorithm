Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 33.29      1.13     1.13 38412919     0.00     0.00  BinTree<int>::bias(BinTreeNode<int>*)
 18.05      1.74     0.61  1000000     0.00     0.00  BinTree<int>::searchNode(BinTreeNode<int>*, int)
 16.57      2.30     0.56   999999     0.00     0.00  BinTree<int>::searchParentNode(BinTreeNode<int>*, int)
  7.10      2.54     0.24        2   120.02   127.52  BinTree<int>::checkBin()
  6.07      2.74     0.21 38112361     0.00     0.00  BinTree<int>::modHeight(BinTreeNode<int>*)
  5.33      2.92     0.18   616581     0.00     0.00  BinTree<int>::LeftMax(BinTreeNode<int>*)
  4.29      3.07     0.15   999885     0.00     0.00  BinTree<int>::BalanceA(BinTreeNode<int>*)
  3.85      3.20     0.13   999886     0.00     0.00  BinTree<int>::BalanceE(BinTreeNode<int>*)
  1.18      3.24     0.04  1000000     0.00     0.00  BinTree<int>::erase(int)
  0.89      3.27     0.03  1000000     0.00     0.00  BinTree<int>::append(int)
  0.44      3.28     0.02   175018     0.00     0.00  BinTree<int>::RotateLR(BinTreeNode<int>*)
  0.30      3.29     0.01  2098273     0.00     0.00  BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*)
  0.30      3.30     0.01  1999772     0.00     0.00  void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&)
  0.30      3.31     0.01  1999772     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front()
  0.30      3.32     0.01  1999772     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&)
  0.30      3.33     0.01  1000000     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.30      3.34     0.01  1000000     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.30      3.35     0.01  1000000     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.30      3.36     0.01   174646     0.00     0.00  BinTree<int>::RotateRL(BinTreeNode<int>*)
  0.30      3.37     0.01        2     5.00    27.15  BinTree<int>::checkAVL()
  0.30      3.38     0.01        1    10.00    10.00  std::random_device::~random_device()
  0.00      3.38     0.00  4030790     0.00     0.00  BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&)
  0.00      3.38     0.00  3000021     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      3.38     0.00  2999775     0.00     0.00  operator new(unsigned long, void*)
  0.00      3.38     0.00  2000000     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      3.38     0.00  1999778     0.00     0.00  std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&)
  0.00      3.38     0.00  1999775     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin()
  0.00      3.38     0.00  1999774     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::empty() const
  0.00      3.38     0.00  1999774     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const
  0.00      3.38     0.00  1999774     0.00     0.00  bool std::operator==<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&)
  0.00      3.38     0.00  1999772     0.00     0.00  void __gnu_cxx::new_allocator<BinTreeNode<int>*>::destroy<BinTreeNode<int>*>(BinTreeNode<int>**)
  0.00      3.38     0.00  1999772     0.00     0.00  std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::operator*() const
  0.00      3.38     0.00  1999772     0.00     0.00  void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**)
  0.00      3.38     0.00  1999772     0.00     0.00  void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&)
  0.00      3.38     0.00  1999772     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front()
  0.00      3.38     0.00  1999772     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop()
  0.00      3.38     0.00  1999772     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&)
  0.00      3.38     0.00  1999772     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front()
  0.00      3.38     0.00  1000000     0.00     0.00  std::random_device::operator()()
  0.00      3.38     0.00  1000000     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      3.38     0.00  1000000     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      3.38     0.00   561017     0.00     0.00  BinTree<int>::RotateR(BinTreeNode<int>*)
  0.00      3.38     0.00   537370     0.00     0.00  BinTree<int>::RotateL(BinTreeNode<int>*)
  0.00      3.38     0.00   125086     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00      3.38     0.00    62582     0.00     0.00  std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***)
  0.00      3.38     0.00    62582     0.00     0.00  std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_S_buffer_size()
  0.00      3.38     0.00    31249     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>*>::deallocate(BinTreeNode<int>**, unsigned long)
  0.00      3.38     0.00    31249     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>*>::allocate(unsigned long, void const*)
  0.00      3.38     0.00    31249     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>*>::max_size() const
  0.00      3.38     0.00    31249     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node()
  0.00      3.38     0.00    31249     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**)
  0.00      3.38     0.00    31249     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator()
  0.00      3.38     0.00    31249     0.00     0.00  std::allocator_traits<std::allocator<BinTreeNode<int>*> >::deallocate(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, unsigned long)
  0.00      3.38     0.00    31249     0.00     0.00  std::allocator_traits<std::allocator<BinTreeNode<int>*> >::allocate(std::allocator<BinTreeNode<int>*>&, unsigned long)
  0.00      3.38     0.00    31246     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux()
  0.00      3.38     0.00    31246     0.00     0.00  void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&)
  0.00      3.38     0.00    31246     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reserve_map_at_back(unsigned long)
  0.00      3.38     0.00      126     0.00     0.00  BinTreeNode<int>*** std::__niter_base<BinTreeNode<int>***>(BinTreeNode<int>***)
  0.00      3.38     0.00      126     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      3.38     0.00       85     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      3.38     0.00       84     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      3.38     0.00       84     0.00     0.00  std::move_iterator<int*>::base() const
  0.00      3.38     0.00       84     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00      3.38     0.00       84     0.00     0.00  BinTreeNode<int>*** std::__miter_base<BinTreeNode<int>***>(BinTreeNode<int>***)
  0.00      3.38     0.00       84     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      3.38     0.00       84     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      3.38     0.00       84     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00      3.38     0.00       64     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      3.38     0.00       63     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      3.38     0.00       47     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      3.38     0.00       46     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>**>::new_allocator()
  0.00      3.38     0.00       46     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>**>::~new_allocator()
  0.00      3.38     0.00       46     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() const
  0.00      3.38     0.00       46     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const
  0.00      3.38     0.00       46     0.00     0.00  std::allocator<BinTreeNode<int>**>::allocator<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*> const&)
  0.00      3.38     0.00       46     0.00     0.00  std::allocator<BinTreeNode<int>**>::~allocator()
  0.00      3.38     0.00       42     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      3.38     0.00       42     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      3.38     0.00       42     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      3.38     0.00       42     0.00     0.00  BinTreeNode<int>*** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<BinTreeNode<int>**>(BinTreeNode<int>** const*, BinTreeNode<int>** const*, BinTreeNode<int>***)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      3.38     0.00       42     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      3.38     0.00       42     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool)
  0.00      3.38     0.00       42     0.00     0.00  BinTreeNode<int>*** std::__copy_move_a<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00      3.38     0.00       42     0.00     0.00  BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00      3.38     0.00       42     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00      3.38     0.00       42     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      3.38     0.00       42     0.00     0.00  BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
  0.00      3.38     0.00       42     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00      3.38     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>**>::deallocate(BinTreeNode<int>***, unsigned long)
  0.00      3.38     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>**>::allocate(unsigned long, void const*)
  0.00      3.38     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>**>::max_size() const
  0.00      3.38     0.00       23     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long)
  0.00      3.38     0.00       23     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long)
  0.00      3.38     0.00       23     0.00     0.00  std::allocator_traits<std::allocator<BinTreeNode<int>**> >::deallocate(std::allocator<BinTreeNode<int>**>&, BinTreeNode<int>***, unsigned long)
  0.00      3.38     0.00       23     0.00     0.00  std::allocator_traits<std::allocator<BinTreeNode<int>**> >::allocate(std::allocator<BinTreeNode<int>**>&, unsigned long)
  0.00      3.38     0.00       22     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      3.38     0.00       22     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      3.38     0.00       22     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      3.38     0.00       22     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      3.38     0.00       21     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      3.38     0.00       21     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      3.38     0.00       21     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      3.38     0.00       21     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      3.38     0.00       21     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      3.38     0.00       21     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      3.38     0.00       21     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      3.38     0.00       21     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
  0.00      3.38     0.00       21     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      3.38     0.00       21     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      3.38     0.00       18     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::size() const
  0.00      3.38     0.00       18     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__niter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::base() const
  0.00      3.38     0.00       12     0.00     0.00  std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::base() const
  0.00      3.38     0.00       12     0.00     0.00  std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::move_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00       12     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>)
  0.00      3.38     0.00       12     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00       12     0.00     0.00  std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> std::__make_move_if_noexcept_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00       10     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator()
  0.00      3.38     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::max_size() const
  0.00      3.38     0.00        9     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&)
  0.00      3.38     0.00        8     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00      3.38     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::__normal_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >* const&)
  0.00      3.38     0.00        6     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() const
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  0.00      3.38     0.00        6     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        6     0.00     0.00  std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator()
  0.00      3.38     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::uninitialized_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy_a<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
  0.00      3.38     0.00        6     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        4     0.00     0.00  void std::_Destroy_aux<true>::__destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        4     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long)
  0.00      3.38     0.00        4     0.00     0.00  void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  0.00      3.38     0.00        4     0.00     0.00  void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
  0.00      3.38     0.00        3     0.00     0.00  BenchMark::Lap()
  0.00      3.38     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long)
  0.00      3.38     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocate(unsigned long, void const*)
  0.00      3.38     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>*>::new_allocator()
  0.00      3.38     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<BinTreeNode<int>*>::~new_allocator()
  0.00      3.38     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::difference_type __gnu_cxx::operator-<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&, __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&)
  0.00      3.38     0.00        3     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const
  0.00      3.38     0.00        3     0.00     0.00  std::allocator<BinTreeNode<int>*>::allocator()
  0.00      3.38     0.00        3     0.00     0.00  std::allocator<BinTreeNode<int>*>::~allocator()
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl()
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::~_Deque_impl()
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_create_nodes(BinTreeNode<int>***, BinTreeNode<int>***)
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_nodes(BinTreeNode<int>***, BinTreeNode<int>***)
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long)
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base()
  0.00      3.38     0.00        3     0.00     0.00  std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base()
  0.00      3.38     0.00        3     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_allocate(unsigned long)
  0.00      3.38     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::deallocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long)
  0.00      3.38     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::allocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, unsigned long)
  0.00      3.38     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        3     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_data(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::allocator<BinTreeNode<int>*> const&)
  0.00      3.38     0.00        3     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::end()
  0.00      3.38     0.00        3     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::deque()
  0.00      3.38     0.00        3     0.00     0.00  std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque()
  0.00      3.38     0.00        3     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>()
  0.00      3.38     0.00        3     0.00     0.00  std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue()
  0.00      3.38     0.00        3     0.00     0.00  std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point()
  0.00      3.38     0.00        3     0.00     0.00  std::chrono::duration_values<long>::zero()
  0.00      3.38     0.00        3     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero()
  0.00      3.38     0.00        3     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00      3.38     0.00        3     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        3     0.00     0.00  void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        3     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::end()
  0.00      3.38     0.00        3     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::begin()
  0.00      3.38     0.00        3     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        2     0.00     0.00  BenchMark::getLap(long)
  0.00      3.38     0.00        2     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
  0.00      3.38     0.00        2     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        2     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      3.38     0.00        2     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  0.00      3.38     0.00        2     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::operator[](unsigned long)
  0.00      3.38     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9BenchMarkC2Ev
  0.00      3.38     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.38     0.00        1     0.00    10.00  genRand(int)
  0.00      3.38     0.00        1     0.00     0.00  BinTree<int>::BinTree()
  0.00      3.38     0.00        1     0.00     0.00  BinTree<int>::~BinTree()
  0.00      3.38     0.00        1     0.00     0.00  BenchMark::Start()
  0.00      3.38     0.00        1     0.00     0.00  BenchMark::BenchMark()
  0.00      3.38     0.00        1     0.00     0.00  BenchMark::~BenchMark()
  0.00      3.38     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::new_allocator()
  0.00      3.38     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~new_allocator()
  0.00      3.38     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      3.38     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      3.38     0.00        1     0.00     0.00  std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocator()
  0.00      3.38     0.00        1     0.00     0.00  std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~allocator()
  0.00      3.38     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00      3.38     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::_Vector_impl()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::~_Vector_impl()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_base()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      3.38     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      3.38     0.00        1     0.00     0.00  std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      3.38     0.00        1     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::vector()
  0.00      3.38     0.00        1     0.00     0.00  std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector()
  0.00      3.38     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      3.38     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      3.38     0.00        1     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.30% of 3.38 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    3.38                 main [1]
                0.04    1.56 1000000/1000000     BinTree<int>::erase(int) [2]
                0.03    1.40 1000000/1000000     BinTree<int>::append(int) [3]
                0.24    0.02       2/2           BinTree<int>::checkBin() [9]
                0.01    0.04       2/2           BinTree<int>::checkAVL() [12]
                0.00    0.03 1000000/1000000     std::vector<int, std::allocator<int> >::push_back(int&&) [14]
                0.00    0.01       1/1           genRand(int) [26]
                0.00    0.00 2000000/2000000     std::vector<int, std::allocator<int> >::operator[](unsigned long) [41]
                0.00    0.00       3/3           BenchMark::Lap() [154]
                0.00    0.00       2/2           BenchMark::getLap(long) [190]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [222]
                0.00    0.00       1/85          std::vector<int, std::allocator<int> >::size() const [69]
                0.00    0.00       1/1           BinTree<int>::BinTree() [198]
                0.00    0.00       1/1           BenchMark::BenchMark() [201]
                0.00    0.00       1/1           BenchMark::Start() [200]
                0.00    0.00       1/1           BenchMark::~BenchMark() [202]
                0.00    0.00       1/1           BinTree<int>::~BinTree() [199]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [223]
-----------------------------------------------
                0.04    1.56 1000000/1000000     main [1]
[2]     47.4    0.04    1.56 1000000         BinTree<int>::erase(int) [2]
                0.13    0.64  999886/999886      BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.61    0.00 1000000/1000000     BinTree<int>::searchNode(BinTreeNode<int>*, int) [7]
                0.18    0.00  616581/616581      BinTree<int>::LeftMax(BinTreeNode<int>*) [11]
                0.00    0.00  999886/2098273     BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*) [20]
-----------------------------------------------
                0.03    1.40 1000000/1000000     main [1]
[3]     42.2    0.03    1.40 1000000         BinTree<int>::append(int) [3]
                0.15    0.69  999885/999885      BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
                0.56    0.00  999999/999999      BinTree<int>::searchParentNode(BinTreeNode<int>*, int) [8]
-----------------------------------------------
                0.03    0.00  999886/38412919     BinTree<int>::checkAVL() [12]
                0.53    0.00 18090307/38412919     BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.57    0.00 19322726/38412919     BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
[4]     33.3    1.13    0.00 38412919         BinTree<int>::bias(BinTreeNode<int>*) [4]
-----------------------------------------------
                0.15    0.69  999885/999885      BinTree<int>::append(int) [3]
[5]     24.8    0.15    0.69  999885         BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
                0.57    0.00 19322726/38412919     BinTree<int>::bias(BinTreeNode<int>*) [4]
                0.10    0.00 18390850/38112361     BinTree<int>::modHeight(BinTreeNode<int>*) [10]
                0.01    0.00  116365/175018      BinTree<int>::RotateLR(BinTreeNode<int>*) [15]
                0.01    0.00  116187/174646      BinTree<int>::RotateRL(BinTreeNode<int>*) [19]
                0.00    0.00  116887/537370      BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.00    0.00  116499/561017      BinTree<int>::RotateR(BinTreeNode<int>*) [28]
-----------------------------------------------
                0.13    0.64  999886/999886      BinTree<int>::erase(int) [2]
[6]     22.7    0.13    0.64  999886         BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.53    0.00 18090307/38412919     BinTree<int>::bias(BinTreeNode<int>*) [4]
                0.09    0.00 17524737/38112361     BinTree<int>::modHeight(BinTreeNode<int>*) [10]
                0.01    0.00   58653/175018      BinTree<int>::RotateLR(BinTreeNode<int>*) [15]
                0.00    0.00   58459/174646      BinTree<int>::RotateRL(BinTreeNode<int>*) [19]
                0.00    0.00   94854/561017      BinTree<int>::RotateR(BinTreeNode<int>*) [28]
                0.00    0.00   70819/537370      BinTree<int>::RotateL(BinTreeNode<int>*) [29]
-----------------------------------------------
                0.61    0.00 1000000/1000000     BinTree<int>::erase(int) [2]
[7]     18.0    0.61    0.00 1000000         BinTree<int>::searchNode(BinTreeNode<int>*, int) [7]
-----------------------------------------------
                0.56    0.00  999999/999999      BinTree<int>::append(int) [3]
[8]     16.6    0.56    0.00  999999         BinTree<int>::searchParentNode(BinTreeNode<int>*, int) [8]
-----------------------------------------------
                0.24    0.02       2/2           main [1]
[9]      7.5    0.24    0.02       2         BinTree<int>::checkBin() [9]
                0.00    0.01  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&) [17]
                0.00    0.01  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop() [24]
                0.00    0.00  999887/1999774     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const [45]
                0.00    0.00  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front() [51]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>() [179]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue() [180]
-----------------------------------------------
                0.01    0.00 1074740/38112361     BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.01    0.00 1122034/38112361     BinTree<int>::RotateR(BinTreeNode<int>*) [28]
                0.09    0.00 17524737/38112361     BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.10    0.00 18390850/38112361     BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
[10]     6.1    0.21    0.00 38112361         BinTree<int>::modHeight(BinTreeNode<int>*) [10]
-----------------------------------------------
                0.18    0.00  616581/616581      BinTree<int>::erase(int) [2]
[11]     5.3    0.18    0.00  616581         BinTree<int>::LeftMax(BinTreeNode<int>*) [11]
-----------------------------------------------
                0.01    0.04       2/2           main [1]
[12]     1.6    0.01    0.04       2         BinTree<int>::checkAVL() [12]
                0.03    0.00  999886/38412919     BinTree<int>::bias(BinTreeNode<int>*) [4]
                0.00    0.01  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&) [17]
                0.00    0.01  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop() [24]
                0.00    0.00  999887/1999774     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const [45]
                0.00    0.00  999886/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front() [51]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>() [179]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue() [180]
-----------------------------------------------
                0.01    0.02 1000000/1000000     std::vector<int, std::allocator<int> >::push_back(int&&) [14]
[13]     0.9    0.01    0.02 1000000         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
                0.01    0.01  999979/1000000     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [18]
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
                0.00    0.00 1000000/3000021     int&& std::forward<int>(std::remove_reference<int>::type&) [39]
                0.00    0.00      21/21          std::vector<int, std::allocator<int> >::end() [121]
-----------------------------------------------
                0.00    0.03 1000000/1000000     main [1]
[14]     0.9    0.00    0.03 1000000         std::vector<int, std::allocator<int> >::push_back(int&&) [14]
                0.01    0.02 1000000/1000000     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
                0.00    0.00 1000000/1000000     std::remove_reference<int&>::type&& std::move<int&>(int&) [53]
-----------------------------------------------
                0.01    0.00   58653/175018      BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.01    0.00  116365/175018      BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
[15]     0.6    0.02    0.01  175018         BinTree<int>::RotateLR(BinTreeNode<int>*) [15]
                0.00    0.00  175018/537370      BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.00    0.00  175018/561017      BinTree<int>::RotateR(BinTreeNode<int>*) [28]
-----------------------------------------------
                0.01    0.01 1999772/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&) [17]
[16]     0.6    0.01    0.01 1999772         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&) [16]
                0.00    0.01 1968526/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [22]
                0.00    0.00   31246/31246       void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
-----------------------------------------------
                0.00    0.01  999886/1999772     BinTree<int>::checkAVL() [12]
                0.00    0.01  999886/1999772     BinTree<int>::checkBin() [9]
[17]     0.6    0.00    0.02 1999772         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&) [17]
                0.01    0.01 1999772/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&) [16]
-----------------------------------------------
                0.00    0.00      21/1000000     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
                0.01    0.01  999979/1000000     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
[18]     0.6    0.01    0.01 1000000         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [18]
                0.01    0.00 1000000/1000000     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [25]
                0.00    0.00 1000000/3000021     int&& std::forward<int>(std::remove_reference<int>::type&) [39]
-----------------------------------------------
                0.00    0.00   58459/174646      BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.01    0.00  116187/174646      BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
[19]     0.5    0.01    0.01  174646         BinTree<int>::RotateRL(BinTreeNode<int>*) [19]
                0.00    0.00  174646/537370      BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.00    0.00  174646/561017      BinTree<int>::RotateR(BinTreeNode<int>*) [28]
-----------------------------------------------
                0.00    0.00  537370/2098273     BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.00    0.00  561017/2098273     BinTree<int>::RotateR(BinTreeNode<int>*) [28]
                0.00    0.00  999886/2098273     BinTree<int>::erase(int) [2]
[20]     0.3    0.01    0.00 2098273         BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*) [20]
-----------------------------------------------
                0.01    0.00 1999772/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [22]
[21]     0.3    0.01    0.00 1999772         void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&) [21]
                0.00    0.00 1999772/4030790     BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&) [38]
                0.00    0.00 1999772/2999775     operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00   31246/1999772     void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
                0.00    0.01 1968526/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&) [16]
[22]     0.3    0.00    0.01 1999772         void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [22]
                0.01    0.00 1999772/1999772     void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&) [21]
                0.00    0.00 1999772/4030790     BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&) [38]
-----------------------------------------------
                0.01    0.00 1999772/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop() [24]
[23]     0.3    0.01    0.00 1999772         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front() [23]
                0.00    0.00 1968526/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**) [49]
                0.00    0.00   31246/31246       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
-----------------------------------------------
                0.00    0.01  999886/1999772     BinTree<int>::checkAVL() [12]
                0.00    0.01  999886/1999772     BinTree<int>::checkBin() [9]
[24]     0.3    0.00    0.01 1999772         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop() [24]
                0.01    0.00 1999772/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front() [23]
-----------------------------------------------
                0.01    0.00 1000000/1000000     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [18]
[25]     0.3    0.01    0.00 1000000         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [25]
                0.00    0.00 1000000/3000021     int&& std::forward<int>(std::remove_reference<int>::type&) [39]
                0.00    0.00 1000000/2999775     operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[26]     0.3    0.00    0.01       1         genRand(int) [26]
                0.01    0.00       1/1           std::random_device::~random_device() [27]
                0.00    0.00 1000000/1000000     std::random_device::operator()() [52]
                0.00    0.00       1/1           std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [224]
                0.00    0.00       1/1           std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [219]
-----------------------------------------------
                0.01    0.00       1/1           genRand(int) [26]
[27]     0.3    0.01    0.00       1         std::random_device::~random_device() [27]
-----------------------------------------------
                0.00    0.00   94854/561017      BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.00    0.00  116499/561017      BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
                0.00    0.00  174646/561017      BinTree<int>::RotateRL(BinTreeNode<int>*) [19]
                0.00    0.00  175018/561017      BinTree<int>::RotateLR(BinTreeNode<int>*) [15]
[28]     0.3    0.00    0.01  561017         BinTree<int>::RotateR(BinTreeNode<int>*) [28]
                0.01    0.00 1122034/38112361     BinTree<int>::modHeight(BinTreeNode<int>*) [10]
                0.00    0.00  561017/2098273     BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*) [20]
-----------------------------------------------
                0.00    0.00   70819/537370      BinTree<int>::BalanceE(BinTreeNode<int>*) [6]
                0.00    0.00  116887/537370      BinTree<int>::BalanceA(BinTreeNode<int>*) [5]
                0.00    0.00  174646/537370      BinTree<int>::RotateRL(BinTreeNode<int>*) [19]
                0.00    0.00  175018/537370      BinTree<int>::RotateLR(BinTreeNode<int>*) [15]
[29]     0.2    0.00    0.01  537370         BinTree<int>::RotateL(BinTreeNode<int>*) [29]
                0.01    0.00 1074740/38112361     BinTree<int>::modHeight(BinTreeNode<int>*) [10]
                0.00    0.00  537370/2098273     BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*) [20]
-----------------------------------------------
                0.00    0.00   31246/31246       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&) [16]
[30]     0.0    0.00    0.00   31246         void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
                0.00    0.00   31246/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [22]
                0.00    0.00   31246/31246       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reserve_map_at_back(unsigned long) [66]
                0.00    0.00   31246/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [60]
                0.00    0.00   31246/4030790     BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&) [38]
                0.00    0.00   31246/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
[31]     0.0    0.00    0.00      21         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
                0.00    0.00      21/1000000     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [18]
                0.00    0.00      63/64          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [77]
                0.00    0.00      42/84          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [70]
                0.00    0.00      42/42          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [100]
                0.00    0.00      21/21          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [117]
                0.00    0.00      21/21          std::vector<int, std::allocator<int> >::begin() [122]
                0.00    0.00      21/21          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [116]
                0.00    0.00      21/21          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [118]
                0.00    0.00      21/3000021     int&& std::forward<int>(std::remove_reference<int>::type&) [39]
                0.00    0.00      21/22          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [113]
                0.00    0.00      21/22          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [111]
-----------------------------------------------
                0.00    0.00   31246/4030790     void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
                0.00    0.00 1999772/4030790     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [22]
                0.00    0.00 1999772/4030790     void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&) [21]
[38]     0.0    0.00    0.00 4030790         BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&) [38]
-----------------------------------------------
                0.00    0.00      21/3000021     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
                0.00    0.00 1000000/3000021     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
                0.00    0.00 1000000/3000021     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [18]
                0.00    0.00 1000000/3000021     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [25]
[39]     0.0    0.00    0.00 3000021         int&& std::forward<int>(std::remove_reference<int>::type&) [39]
-----------------------------------------------
                0.00    0.00       3/2999775     void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [157]
                0.00    0.00 1000000/2999775     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [25]
                0.00    0.00 1999772/2999775     void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&) [21]
[40]     0.0    0.00    0.00 2999775         operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00 2000000/2000000     main [1]
[41]     0.0    0.00    0.00 2000000         std::vector<int, std::allocator<int> >::operator[](unsigned long) [41]
-----------------------------------------------
                0.00    0.00       3/1999778     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::end() [176]
                0.00    0.00 1999775/1999778     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin() [43]
[42]     0.0    0.00    0.00 1999778         std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [42]
-----------------------------------------------
                0.00    0.00       3/1999775     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
                0.00    0.00 1999772/1999775     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front() [50]
[43]     0.0    0.00    0.00 1999775         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin() [43]
                0.00    0.00 1999775/1999778     std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [42]
-----------------------------------------------
                0.00    0.00 1999774/1999774     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const [45]
[44]     0.0    0.00    0.00 1999774         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::empty() const [44]
                0.00    0.00 1999774/1999774     bool std::operator==<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [46]
-----------------------------------------------
                0.00    0.00  999887/1999774     BinTree<int>::checkAVL() [12]
                0.00    0.00  999887/1999774     BinTree<int>::checkBin() [9]
[45]     0.0    0.00    0.00 1999774         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const [45]
                0.00    0.00 1999774/1999774     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::empty() const [44]
-----------------------------------------------
                0.00    0.00 1999774/1999774     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::empty() const [44]
[46]     0.0    0.00    0.00 1999774         bool std::operator==<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [46]
-----------------------------------------------
                0.00    0.00 1999772/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**) [49]
[47]     0.0    0.00    0.00 1999772         void __gnu_cxx::new_allocator<BinTreeNode<int>*>::destroy<BinTreeNode<int>*>(BinTreeNode<int>**) [47]
-----------------------------------------------
                0.00    0.00 1999772/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front() [50]
[48]     0.0    0.00    0.00 1999772         std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::operator*() const [48]
-----------------------------------------------
                0.00    0.00   31246/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
                0.00    0.00 1968526/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front() [23]
[49]     0.0    0.00    0.00 1999772         void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**) [49]
                0.00    0.00 1999772/1999772     void __gnu_cxx::new_allocator<BinTreeNode<int>*>::destroy<BinTreeNode<int>*>(BinTreeNode<int>**) [47]
-----------------------------------------------
                0.00    0.00 1999772/1999772     std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front() [51]
[50]     0.0    0.00    0.00 1999772         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front() [50]
                0.00    0.00 1999772/1999775     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin() [43]
                0.00    0.00 1999772/1999772     std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::operator*() const [48]
-----------------------------------------------
                0.00    0.00  999886/1999772     BinTree<int>::checkAVL() [12]
                0.00    0.00  999886/1999772     BinTree<int>::checkBin() [9]
[51]     0.0    0.00    0.00 1999772         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front() [51]
                0.00    0.00 1999772/1999772     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front() [50]
-----------------------------------------------
                0.00    0.00 1000000/1000000     genRand(int) [26]
[52]     0.0    0.00    0.00 1000000         std::random_device::operator()() [52]
-----------------------------------------------
                0.00    0.00 1000000/1000000     std::vector<int, std::allocator<int> >::push_back(int&&) [14]
[53]     0.0    0.00    0.00 1000000         std::remove_reference<int&>::type&& std::move<int&>(int&) [53]
-----------------------------------------------
                0.00    0.00       6/125086      std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
                0.00    0.00   31249/125086      std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [61]
                0.00    0.00   31249/125086      std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [60]
                0.00    0.00   62582/125086      std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_S_buffer_size() [56]
[54]     0.0    0.00    0.00  125086         std::__deque_buf_size(unsigned long) [54]
-----------------------------------------------
                0.00    0.00       6/62582       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
                0.00    0.00      84/62582       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
                0.00    0.00   31246/62582       void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
                0.00    0.00   31246/62582       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
[55]     0.0    0.00    0.00   62582         std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
                0.00    0.00   62582/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_S_buffer_size() [56]
-----------------------------------------------
                0.00    0.00   62582/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
[56]     0.0    0.00    0.00   62582         std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_S_buffer_size() [56]
                0.00    0.00   62582/125086      std::__deque_buf_size(unsigned long) [54]
-----------------------------------------------
                0.00    0.00   31249/31249       std::allocator_traits<std::allocator<BinTreeNode<int>*> >::deallocate(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, unsigned long) [63]
[57]     0.0    0.00    0.00   31249         __gnu_cxx::new_allocator<BinTreeNode<int>*>::deallocate(BinTreeNode<int>**, unsigned long) [57]
-----------------------------------------------
                0.00    0.00   31249/31249       std::allocator_traits<std::allocator<BinTreeNode<int>*> >::allocate(std::allocator<BinTreeNode<int>*>&, unsigned long) [64]
[58]     0.0    0.00    0.00   31249         __gnu_cxx::new_allocator<BinTreeNode<int>*>::allocate(unsigned long, void const*) [58]
                0.00    0.00   31249/31249       __gnu_cxx::new_allocator<BinTreeNode<int>*>::max_size() const [59]
-----------------------------------------------
                0.00    0.00   31249/31249       __gnu_cxx::new_allocator<BinTreeNode<int>*>::allocate(unsigned long, void const*) [58]
[59]     0.0    0.00    0.00   31249         __gnu_cxx::new_allocator<BinTreeNode<int>*>::max_size() const [59]
-----------------------------------------------
                0.00    0.00       3/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_create_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [166]
                0.00    0.00   31246/31249       void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
[60]     0.0    0.00    0.00   31249         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [60]
                0.00    0.00   31249/125086      std::__deque_buf_size(unsigned long) [54]
                0.00    0.00   31249/31249       std::allocator_traits<std::allocator<BinTreeNode<int>*> >::allocate(std::allocator<BinTreeNode<int>*>&, unsigned long) [64]
-----------------------------------------------
                0.00    0.00       3/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [167]
                0.00    0.00   31246/31249       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
[61]     0.0    0.00    0.00   31249         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [61]
                0.00    0.00   31249/125086      std::__deque_buf_size(unsigned long) [54]
                0.00    0.00   31249/31249       std::allocator_traits<std::allocator<BinTreeNode<int>*> >::deallocate(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, unsigned long) [63]
-----------------------------------------------
                0.00    0.00       3/31249       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
                0.00    0.00   31246/31249       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
[62]     0.0    0.00    0.00   31249         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() [62]
-----------------------------------------------
                0.00    0.00   31249/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [61]
[63]     0.0    0.00    0.00   31249         std::allocator_traits<std::allocator<BinTreeNode<int>*> >::deallocate(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, unsigned long) [63]
                0.00    0.00   31249/31249       __gnu_cxx::new_allocator<BinTreeNode<int>*>::deallocate(BinTreeNode<int>**, unsigned long) [57]
-----------------------------------------------
                0.00    0.00   31249/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [60]
[64]     0.0    0.00    0.00   31249         std::allocator_traits<std::allocator<BinTreeNode<int>*> >::allocate(std::allocator<BinTreeNode<int>*>&, unsigned long) [64]
                0.00    0.00   31249/31249       __gnu_cxx::new_allocator<BinTreeNode<int>*>::allocate(unsigned long, void const*) [58]
-----------------------------------------------
                0.00    0.00   31246/31246       std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front() [23]
[65]     0.0    0.00    0.00   31246         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [65]
                0.00    0.00   31246/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() [62]
                0.00    0.00   31246/1999772     void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**) [49]
                0.00    0.00   31246/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [61]
                0.00    0.00   31246/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
-----------------------------------------------
                0.00    0.00   31246/31246       void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [30]
[66]     0.0    0.00    0.00   31246         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reserve_map_at_back(unsigned long) [66]
                0.00    0.00      42/42          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
-----------------------------------------------
                0.00    0.00     126/126         BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [96]
[67]     0.0    0.00    0.00     126         BinTreeNode<int>*** std::__niter_base<BinTreeNode<int>***>(BinTreeNode<int>***) [67]
-----------------------------------------------
                0.00    0.00     126/126         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [97]
[68]     0.0    0.00    0.00     126         int* std::__niter_base<int*>(int*) [68]
-----------------------------------------------
                0.00    0.00       1/85          main [1]
                0.00    0.00      84/85          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [117]
[69]     0.0    0.00    0.00      85         std::vector<int, std::allocator<int> >::size() const [69]
-----------------------------------------------
                0.00    0.00      42/84          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
                0.00    0.00      42/84          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [116]
[70]     0.0    0.00    0.00      84         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [70]
-----------------------------------------------
                0.00    0.00      84/84          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [74]
[71]     0.0    0.00    0.00      84         std::move_iterator<int*>::base() const [71]
-----------------------------------------------
                0.00    0.00      84/84          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [76]
[72]     0.0    0.00    0.00      84         std::move_iterator<int*>::move_iterator(int*) [72]
-----------------------------------------------
                0.00    0.00      84/84          BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [101]
[73]     0.0    0.00    0.00      84         BinTreeNode<int>*** std::__miter_base<BinTreeNode<int>***>(BinTreeNode<int>***) [73]
-----------------------------------------------
                0.00    0.00      84/84          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [102]
[74]     0.0    0.00    0.00      84         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [74]
                0.00    0.00      84/84          std::move_iterator<int*>::base() const [71]
                0.00    0.00      84/84          int* std::__miter_base<int*>(int*) [75]
-----------------------------------------------
                0.00    0.00      84/84          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [74]
[75]     0.0    0.00    0.00      84         int* std::__miter_base<int*>(int*) [75]
-----------------------------------------------
                0.00    0.00      84/84          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [100]
[76]     0.0    0.00    0.00      84         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [76]
                0.00    0.00      84/84          std::move_iterator<int*>::move_iterator(int*) [72]
-----------------------------------------------
                0.00    0.00       1/64          std::vector<int, std::allocator<int> >::~vector() [223]
                0.00    0.00      63/64          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[77]     0.0    0.00    0.00      64         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [77]
-----------------------------------------------
                0.00    0.00      21/63          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [115]
                0.00    0.00      42/63          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [91]
[78]     0.0    0.00    0.00      63         __gnu_cxx::new_allocator<int>::max_size() const [78]
-----------------------------------------------
                0.00    0.00       3/47          std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00       3/47          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
                0.00    0.00      20/47          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
                0.00    0.00      21/47          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [117]
[79]     0.0    0.00    0.00      47         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [79]
-----------------------------------------------
                0.00    0.00      46/46          std::allocator<BinTreeNode<int>**>::allocator<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*> const&) [84]
[80]     0.0    0.00    0.00      46         __gnu_cxx::new_allocator<BinTreeNode<int>**>::new_allocator() [80]
-----------------------------------------------
                0.00    0.00      46/46          std::allocator<BinTreeNode<int>**>::~allocator() [85]
[81]     0.0    0.00    0.00      46         __gnu_cxx::new_allocator<BinTreeNode<int>**>::~new_allocator() [81]
-----------------------------------------------
                0.00    0.00      46/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [83]
[82]     0.0    0.00    0.00      46         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() const [82]
-----------------------------------------------
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
[83]     0.0    0.00    0.00      46         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [83]
                0.00    0.00      46/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() const [82]
                0.00    0.00      46/46          std::allocator<BinTreeNode<int>**>::allocator<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*> const&) [84]
-----------------------------------------------
                0.00    0.00      46/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [83]
[84]     0.0    0.00    0.00      46         std::allocator<BinTreeNode<int>**>::allocator<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*> const&) [84]
                0.00    0.00      46/46          __gnu_cxx::new_allocator<BinTreeNode<int>**>::new_allocator() [80]
-----------------------------------------------
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
[85]     0.0    0.00    0.00      46         std::allocator<BinTreeNode<int>**>::~allocator() [85]
                0.00    0.00      46/46          __gnu_cxx::new_allocator<BinTreeNode<int>**>::~new_allocator() [81]
-----------------------------------------------
                0.00    0.00      21/42          std::vector<int, std::allocator<int> >::end() [121]
                0.00    0.00      21/42          std::vector<int, std::allocator<int> >::begin() [122]
[86]     0.0    0.00    0.00      42         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [86]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::max_size() const [88]
[87]     0.0    0.00    0.00      42         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [87]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [117]
[88]     0.0    0.00    0.00      42         std::vector<int, std::allocator<int> >::max_size() const [88]
                0.00    0.00      42/42          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [91]
                0.00    0.00      42/42          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [87]
-----------------------------------------------
                0.00    0.00      42/42          BinTreeNode<int>*** std::__copy_move_a<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [94]
[89]     0.0    0.00    0.00      42         BinTreeNode<int>*** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<BinTreeNode<int>**>(BinTreeNode<int>** const*, BinTreeNode<int>** const*, BinTreeNode<int>***) [89]
-----------------------------------------------
                0.00    0.00      42/42          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [95]
[90]     0.0    0.00    0.00      42         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [90]
-----------------------------------------------
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::max_size() const [88]
[91]     0.0    0.00    0.00      42         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [91]
                0.00    0.00      42/63          __gnu_cxx::new_allocator<int>::max_size() const [78]
-----------------------------------------------
                0.00    0.00      42/42          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [98]
[92]     0.0    0.00    0.00      42         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [92]
                0.00    0.00      42/42          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [102]
-----------------------------------------------
                0.00    0.00      42/42          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reserve_map_at_back(unsigned long) [66]
[93]     0.0    0.00    0.00      42         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
                0.00    0.00      84/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
                0.00    0.00      42/42          BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [101]
                0.00    0.00      20/47          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [79]
                0.00    0.00      20/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
                0.00    0.00      20/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
-----------------------------------------------
                0.00    0.00      42/42          BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [96]
[94]     0.0    0.00    0.00      42         BinTreeNode<int>*** std::__copy_move_a<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [94]
                0.00    0.00      42/42          BinTreeNode<int>*** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<BinTreeNode<int>**>(BinTreeNode<int>** const*, BinTreeNode<int>** const*, BinTreeNode<int>***) [89]
-----------------------------------------------
                0.00    0.00      42/42          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [97]
[95]     0.0    0.00    0.00      42         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [95]
                0.00    0.00      42/42          int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [90]
-----------------------------------------------
                0.00    0.00      42/42          BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [101]
[96]     0.0    0.00    0.00      42         BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [96]
                0.00    0.00     126/126         BinTreeNode<int>*** std::__niter_base<BinTreeNode<int>***>(BinTreeNode<int>***) [67]
                0.00    0.00      42/42          BinTreeNode<int>*** std::__copy_move_a<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [94]
-----------------------------------------------
                0.00    0.00      42/42          int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [102]
[97]     0.0    0.00    0.00      42         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [97]
                0.00    0.00     126/126         int* std::__niter_base<int*>(int*) [68]
                0.00    0.00      42/42          int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [95]
-----------------------------------------------
                0.00    0.00      42/42          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [99]
[98]     0.0    0.00    0.00      42         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [98]
                0.00    0.00      42/42          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [92]
-----------------------------------------------
                0.00    0.00      42/42          int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [100]
[99]     0.0    0.00    0.00      42         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [99]
                0.00    0.00      42/42          int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [98]
-----------------------------------------------
                0.00    0.00      42/42          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[100]    0.0    0.00    0.00      42         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [100]
                0.00    0.00      84/84          std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [76]
                0.00    0.00      42/42          int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [99]
-----------------------------------------------
                0.00    0.00      42/42          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
[101]    0.0    0.00    0.00      42         BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [101]
                0.00    0.00      84/84          BinTreeNode<int>*** std::__miter_base<BinTreeNode<int>***>(BinTreeNode<int>***) [73]
                0.00    0.00      42/42          BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***) [96]
-----------------------------------------------
                0.00    0.00      42/42          int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [92]
[102]    0.0    0.00    0.00      42         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [102]
                0.00    0.00      84/84          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [74]
                0.00    0.00      42/42          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [97]
-----------------------------------------------
                0.00    0.00      23/23          std::allocator_traits<std::allocator<BinTreeNode<int>**> >::deallocate(std::allocator<BinTreeNode<int>**>&, BinTreeNode<int>***, unsigned long) [108]
[103]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<BinTreeNode<int>**>::deallocate(BinTreeNode<int>***, unsigned long) [103]
-----------------------------------------------
                0.00    0.00      23/23          std::allocator_traits<std::allocator<BinTreeNode<int>**> >::allocate(std::allocator<BinTreeNode<int>**>&, unsigned long) [109]
[104]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<BinTreeNode<int>**>::allocate(unsigned long, void const*) [104]
                0.00    0.00      23/23          __gnu_cxx::new_allocator<BinTreeNode<int>**>::max_size() const [105]
-----------------------------------------------
                0.00    0.00      23/23          __gnu_cxx::new_allocator<BinTreeNode<int>**>::allocate(unsigned long, void const*) [104]
[105]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<BinTreeNode<int>**>::max_size() const [105]
-----------------------------------------------
                0.00    0.00       3/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
                0.00    0.00      20/23          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
[106]    0.0    0.00    0.00      23         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [83]
                0.00    0.00      23/23          std::allocator_traits<std::allocator<BinTreeNode<int>**> >::allocate(std::allocator<BinTreeNode<int>**>&, unsigned long) [109]
                0.00    0.00      23/46          std::allocator<BinTreeNode<int>**>::~allocator() [85]
-----------------------------------------------
                0.00    0.00       3/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [170]
                0.00    0.00      20/23          std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [93]
[107]    0.0    0.00    0.00      23         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
                0.00    0.00      23/46          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [83]
                0.00    0.00      23/23          std::allocator_traits<std::allocator<BinTreeNode<int>**> >::deallocate(std::allocator<BinTreeNode<int>**>&, BinTreeNode<int>***, unsigned long) [108]
                0.00    0.00      23/46          std::allocator<BinTreeNode<int>**>::~allocator() [85]
-----------------------------------------------
                0.00    0.00      23/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
[108]    0.0    0.00    0.00      23         std::allocator_traits<std::allocator<BinTreeNode<int>**> >::deallocate(std::allocator<BinTreeNode<int>**>&, BinTreeNode<int>***, unsigned long) [108]
                0.00    0.00      23/23          __gnu_cxx::new_allocator<BinTreeNode<int>**>::deallocate(BinTreeNode<int>***, unsigned long) [103]
-----------------------------------------------
                0.00    0.00      23/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
[109]    0.0    0.00    0.00      23         std::allocator_traits<std::allocator<BinTreeNode<int>**> >::allocate(std::allocator<BinTreeNode<int>**>&, unsigned long) [109]
                0.00    0.00      23/23          __gnu_cxx::new_allocator<BinTreeNode<int>**>::allocate(unsigned long, void const*) [104]
-----------------------------------------------
                0.00    0.00      22/22          void std::_Destroy<int*>(int*, int*) [112]
[110]    0.0    0.00    0.00      22         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [110]
-----------------------------------------------
                0.00    0.00       1/22          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [218]
                0.00    0.00      21/22          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[111]    0.0    0.00    0.00      22         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [111]
                0.00    0.00      21/21          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [119]
-----------------------------------------------
                0.00    0.00      22/22          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [113]
[112]    0.0    0.00    0.00      22         void std::_Destroy<int*>(int*, int*) [112]
                0.00    0.00      22/22          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [110]
-----------------------------------------------
                0.00    0.00       1/22          std::vector<int, std::allocator<int> >::~vector() [223]
                0.00    0.00      21/22          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[113]    0.0    0.00    0.00      22         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [113]
                0.00    0.00      22/22          void std::_Destroy<int*>(int*, int*) [112]
-----------------------------------------------
                0.00    0.00      21/21          std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [119]
[114]    0.0    0.00    0.00      21         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [114]
-----------------------------------------------
                0.00    0.00      21/21          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [120]
[115]    0.0    0.00    0.00      21         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [115]
                0.00    0.00      21/63          __gnu_cxx::new_allocator<int>::max_size() const [78]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[116]    0.0    0.00    0.00      21         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [116]
                0.00    0.00      42/84          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [70]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[117]    0.0    0.00    0.00      21         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [117]
                0.00    0.00      84/85          std::vector<int, std::allocator<int> >::size() const [69]
                0.00    0.00      42/42          std::vector<int, std::allocator<int> >::max_size() const [88]
                0.00    0.00      21/47          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [79]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[118]    0.0    0.00    0.00      21         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [118]
                0.00    0.00      21/21          std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [120]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [111]
[119]    0.0    0.00    0.00      21         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [119]
                0.00    0.00      21/21          __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [114]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [118]
[120]    0.0    0.00    0.00      21         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [120]
                0.00    0.00      21/21          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [115]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [13]
[121]    0.0    0.00    0.00      21         std::vector<int, std::allocator<int> >::end() [121]
                0.00    0.00      21/42          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [86]
-----------------------------------------------
                0.00    0.00      21/21          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [31]
[122]    0.0    0.00    0.00      21         std::vector<int, std::allocator<int> >::begin() [122]
                0.00    0.00      21/42          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [86]
-----------------------------------------------
                0.00    0.00       6/18          BenchMark::Lap() [154]
                0.00    0.00      12/18          std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [161]
[123]    0.0    0.00    0.00      18         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::size() const [123]
-----------------------------------------------
                0.00    0.00      18/18          std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [145]
[124]    0.0    0.00    0.00      18         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__niter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [124]
-----------------------------------------------
                0.00    0.00       6/12          void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::difference_type __gnu_cxx::operator-<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&, __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&) [160]
[125]    0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::base() const [125]
-----------------------------------------------
                0.00    0.00      12/12          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>) [128]
[126]    0.0    0.00    0.00      12         std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::base() const [126]
-----------------------------------------------
                0.00    0.00      12/12          std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> std::__make_move_if_noexcept_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [130]
[127]    0.0    0.00    0.00      12         std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::move_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [127]
-----------------------------------------------
                0.00    0.00      12/12          std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [149]
[128]    0.0    0.00    0.00      12         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>) [128]
                0.00    0.00      12/12          std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [129]
                0.00    0.00      12/12          std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::base() const [126]
-----------------------------------------------
                0.00    0.00      12/12          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>) [128]
[129]    0.0    0.00    0.00      12         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [129]
-----------------------------------------------
                0.00    0.00      12/12          std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [148]
[130]    0.0    0.00    0.00      12         std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> std::__make_move_if_noexcept_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [130]
                0.00    0.00      12/12          std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::move_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [127]
-----------------------------------------------
                0.00    0.00       1/10          std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector() [221]
                0.00    0.00       9/10          void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[131]    0.0    0.00    0.00      10         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() [131]
-----------------------------------------------
                0.00    0.00       3/9           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocate(unsigned long, void const*) [156]
                0.00    0.00       6/9           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [141]
[132]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::max_size() const [132]
-----------------------------------------------
                0.00    0.00       3/9           void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [174]
                0.00    0.00       3/9           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
                0.00    0.00       3/9           void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [157]
[133]    0.0    0.00    0.00       9         std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&) [133]
-----------------------------------------------
                0.00    0.00       2/8           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [193]
                0.00    0.00       6/8           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [185]
[134]    0.0    0.00    0.00       8         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [134]
-----------------------------------------------
                0.00    0.00       3/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::end() [187]
                0.00    0.00       3/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::begin() [188]
[135]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::__normal_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >* const&) [135]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const [138]
[136]    0.0    0.00    0.00       6         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() const [136]
-----------------------------------------------
                0.00    0.00       6/6           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [184]
[137]    0.0    0.00    0.00       6         std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [137]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [161]
[138]    0.0    0.00    0.00       6         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const [138]
                0.00    0.00       6/6           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() const [136]
                0.00    0.00       6/6           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [141]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [144]
[139]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [139]
-----------------------------------------------
                0.00    0.00       6/6           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl() [164]
[140]    0.0    0.00    0.00       6         std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator() [140]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const [138]
[141]    0.0    0.00    0.00       6         std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [141]
                0.00    0.00       6/9           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::max_size() const [132]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::uninitialized_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [146]
[142]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [142]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [149]
-----------------------------------------------
                0.00    0.00       3/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero() [183]
                0.00    0.00       3/6           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [185]
[143]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [143]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [145]
[144]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [144]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [139]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [149]
[145]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [145]
                0.00    0.00      18/18          std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__niter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [124]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [144]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy_a<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [147]
[146]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::uninitialized_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [146]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [142]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [148]
[147]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy_a<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [147]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::uninitialized_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [146]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[148]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [148]
                0.00    0.00      12/12          std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> std::__make_move_if_noexcept_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [130]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy_a<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [147]
-----------------------------------------------
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [142]
[149]    0.0    0.00    0.00       6         std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [149]
                0.00    0.00      12/12          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>) [128]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [145]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [152]
[150]    0.0    0.00    0.00       4         void std::_Destroy_aux<true>::__destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [150]
-----------------------------------------------
                0.00    0.00       1/4           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base() [214]
                0.00    0.00       3/4           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[151]    0.0    0.00    0.00       4         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [151]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::deallocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [172]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [153]
[152]    0.0    0.00    0.00       4         void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [152]
                0.00    0.00       4/4           void std::_Destroy_aux<true>::__destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [150]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector() [221]
                0.00    0.00       3/4           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[153]    0.0    0.00    0.00       4         void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [153]
                0.00    0.00       4/4           void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [152]
-----------------------------------------------
                0.00    0.00       3/3           main [1]
[154]    0.0    0.00    0.00       3         BenchMark::Lap() [154]
                0.00    0.00       6/18          std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::size() const [123]
                0.00    0.00       3/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [184]
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [189]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::deallocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [172]
[155]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [155]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::allocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, unsigned long) [173]
[156]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocate(unsigned long, void const*) [156]
                0.00    0.00       3/9           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::max_size() const [132]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [174]
[157]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [157]
                0.00    0.00       3/9           std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&) [133]
                0.00    0.00       3/2999775     operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<BinTreeNode<int>*>::allocator() [162]
[158]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<BinTreeNode<int>*>::new_allocator() [158]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<BinTreeNode<int>*>::~allocator() [163]
[159]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<BinTreeNode<int>*>::~new_allocator() [159]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[160]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::difference_type __gnu_cxx::operator-<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&, __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&) [160]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::base() const [125]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[161]    0.0    0.00    0.00       3         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00      12/18          std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::size() const [123]
                0.00    0.00       6/6           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const [138]
                0.00    0.00       3/47          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [79]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl() [164]
[162]    0.0    0.00    0.00       3         std::allocator<BinTreeNode<int>*>::allocator() [162]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<BinTreeNode<int>*>::new_allocator() [158]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::~_Deque_impl() [165]
[163]    0.0    0.00    0.00       3         std::allocator<BinTreeNode<int>*>::~allocator() [163]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<BinTreeNode<int>*>::~new_allocator() [159]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base() [169]
[164]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl() [164]
                0.00    0.00       6/6           std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator() [140]
                0.00    0.00       3/3           std::allocator<BinTreeNode<int>*>::allocator() [162]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [170]
[165]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::~_Deque_impl() [165]
                0.00    0.00       3/3           std::allocator<BinTreeNode<int>*>::~allocator() [163]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
[166]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_create_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [166]
                0.00    0.00       3/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [60]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [170]
[167]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [167]
                0.00    0.00       3/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [61]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base() [169]
[168]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
                0.00    0.00       6/125086      std::__deque_buf_size(unsigned long) [54]
                0.00    0.00       6/62582       std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [55]
                0.00    0.00       3/47          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [79]
                0.00    0.00       3/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [106]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_create_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [166]
-----------------------------------------------
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::deque() [177]
[169]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base() [169]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl() [164]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [168]
-----------------------------------------------
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
[170]    0.0    0.00    0.00       3         std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [170]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [167]
                0.00    0.00       3/23          std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [107]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::~_Deque_impl() [165]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[171]    0.0    0.00    0.00       3         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_allocate(unsigned long) [171]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::allocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, unsigned long) [173]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [151]
[172]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::deallocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [172]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [155]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_allocate(unsigned long) [171]
[173]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::allocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, unsigned long) [173]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocate(unsigned long, void const*) [156]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[174]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [174]
                0.00    0.00       3/9           std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&) [133]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [157]
-----------------------------------------------
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
[175]    0.0    0.00    0.00       3         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_data(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::allocator<BinTreeNode<int>*> const&) [175]
-----------------------------------------------
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
[176]    0.0    0.00    0.00       3         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::end() [176]
                0.00    0.00       3/1999778     std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [42]
-----------------------------------------------
                0.00    0.00       3/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>() [179]
[177]    0.0    0.00    0.00       3         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::deque() [177]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base() [169]
-----------------------------------------------
                0.00    0.00       3/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue() [180]
[178]    0.0    0.00    0.00       3         std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
                0.00    0.00       3/31249       std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() [62]
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::end() [176]
                0.00    0.00       3/1999775     std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin() [43]
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_data(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::allocator<BinTreeNode<int>*> const&) [175]
                0.00    0.00       3/3           std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [170]
-----------------------------------------------
                0.00    0.00       1/3           BinTree<int>::~BinTree() [199]
                0.00    0.00       1/3           BinTree<int>::checkAVL() [12]
                0.00    0.00       1/3           BinTree<int>::checkBin() [9]
[179]    0.0    0.00    0.00       3         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>() [179]
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::deque() [177]
-----------------------------------------------
                0.00    0.00       1/3           BinTree<int>::~BinTree() [199]
                0.00    0.00       1/3           BinTree<int>::checkAVL() [12]
                0.00    0.00       1/3           BinTree<int>::checkBin() [9]
[180]    0.0    0.00    0.00       3         std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue() [180]
                0.00    0.00       3/3           std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque() [178]
-----------------------------------------------
                0.00    0.00       3/3           BenchMark::BenchMark() [201]
[181]    0.0    0.00    0.00       3         std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point() [181]
                0.00    0.00       3/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero() [183]
-----------------------------------------------
                0.00    0.00       3/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero() [183]
[182]    0.0    0.00    0.00       3         std::chrono::duration_values<long>::zero() [182]
-----------------------------------------------
                0.00    0.00       3/3           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point() [181]
[183]    0.0    0.00    0.00       3         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero() [183]
                0.00    0.00       3/3           std::chrono::duration_values<long>::zero() [182]
                0.00    0.00       3/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [143]
-----------------------------------------------
                0.00    0.00       3/3           BenchMark::Lap() [154]
[184]    0.0    0.00    0.00       3         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [184]
                0.00    0.00       6/6           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [137]
                0.00    0.00       3/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [185]
-----------------------------------------------
                0.00    0.00       3/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [184]
[185]    0.0    0.00    0.00       3         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [185]
                0.00    0.00       6/8           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [134]
                0.00    0.00       3/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [143]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [189]
[186]    0.0    0.00    0.00       3         void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
                0.00    0.00       9/10          std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() [131]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::base() const [125]
                0.00    0.00       6/6           std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [148]
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::begin() [188]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::difference_type __gnu_cxx::operator-<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&, __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&) [160]
                0.00    0.00       3/3           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_allocate(unsigned long) [171]
                0.00    0.00       3/9           std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&) [133]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [174]
                0.00    0.00       3/4           void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [153]
                0.00    0.00       3/4           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [151]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [189]
[187]    0.0    0.00    0.00       3         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::end() [187]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::__normal_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >* const&) [135]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
[188]    0.0    0.00    0.00       3         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::begin() [188]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::__normal_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >* const&) [135]
-----------------------------------------------
                0.00    0.00       3/3           BenchMark::Lap() [154]
[189]    0.0    0.00    0.00       3         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [189]
                0.00    0.00       3/3           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::end() [187]
                0.00    0.00       3/3           void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [186]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[190]    0.0    0.00    0.00       2         BenchMark::getLap(long) [190]
                0.00    0.00       2/2           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::operator[](unsigned long) [195]
                0.00    0.00       2/2           std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [192]
                0.00    0.00       2/2           std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [191]
-----------------------------------------------
                0.00    0.00       2/2           BenchMark::getLap(long) [190]
[191]    0.0    0.00    0.00       2         std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [191]
-----------------------------------------------
                0.00    0.00       2/2           BenchMark::getLap(long) [190]
[192]    0.0    0.00    0.00       2         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [192]
                0.00    0.00       2/2           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [193]
-----------------------------------------------
                0.00    0.00       2/2           std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [192]
[193]    0.0    0.00    0.00       2         std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [193]
                0.00    0.00       2/8           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [134]
                0.00    0.00       2/2           std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [194]
-----------------------------------------------
                0.00    0.00       2/2           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [193]
[194]    0.0    0.00    0.00       2         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [194]
-----------------------------------------------
                0.00    0.00       2/2           BenchMark::getLap(long) [190]
[195]    0.0    0.00    0.00       2         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::operator[](unsigned long) [195]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [248]
[196]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9BenchMarkC2Ev [196]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [197]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9BenchMarkC2Ev [196]
[197]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [197]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[198]    0.0    0.00    0.00       1         BinTree<int>::BinTree() [198]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[199]    0.0    0.00    0.00       1         BinTree<int>::~BinTree() [199]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>() [179]
                0.00    0.00       1/3           std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue() [180]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[200]    0.0    0.00    0.00       1         BenchMark::Start() [200]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[201]    0.0    0.00    0.00       1         BenchMark::BenchMark() [201]
                0.00    0.00       3/3           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point() [181]
                0.00    0.00       1/1           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::vector() [220]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[202]    0.0    0.00    0.00       1         BenchMark::~BenchMark() [202]
                0.00    0.00       1/1           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector() [221]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocator() [207]
[203]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::new_allocator() [203]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~allocator() [208]
[204]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~new_allocator() [204]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [209]
[205]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [205]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [210]
[206]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [206]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::_Vector_impl() [211]
[207]    0.0    0.00    0.00       1         std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocator() [207]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::new_allocator() [203]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::~_Vector_impl() [212]
[208]    0.0    0.00    0.00       1         std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~allocator() [208]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~new_allocator() [204]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [215]
[209]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [209]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [205]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [216]
[210]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [210]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [206]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_base() [213]
[211]    0.0    0.00    0.00       1         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::_Vector_impl() [211]
                0.00    0.00       1/1           std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocator() [207]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base() [214]
[212]    0.0    0.00    0.00       1         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::~_Vector_impl() [212]
                0.00    0.00       1/1           std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~allocator() [208]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::vector() [220]
[213]    0.0    0.00    0.00       1         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_base() [213]
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::_Vector_impl() [211]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector() [221]
[214]    0.0    0.00    0.00       1         std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base() [214]
                0.00    0.00       1/4           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [151]
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::~_Vector_impl() [212]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [217]
[215]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [215]
                0.00    0.00       1/1           std::allocator<int>::allocator() [209]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [218]
[216]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [216]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [210]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [222]
[217]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [217]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [215]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [223]
[218]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [218]
                0.00    0.00       1/22          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [111]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [216]
-----------------------------------------------
                0.00    0.00       1/1           genRand(int) [26]
[219]    0.0    0.00    0.00       1         std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [219]
-----------------------------------------------
                0.00    0.00       1/1           BenchMark::BenchMark() [201]
[220]    0.0    0.00    0.00       1         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::vector() [220]
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_base() [213]
-----------------------------------------------
                0.00    0.00       1/1           BenchMark::~BenchMark() [202]
[221]    0.0    0.00    0.00       1         std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector() [221]
                0.00    0.00       1/10          std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() [131]
                0.00    0.00       1/4           void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&) [153]
                0.00    0.00       1/1           std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base() [214]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[222]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [222]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [217]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[223]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [223]
                0.00    0.00       1/64          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [77]
                0.00    0.00       1/22          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [113]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [218]
-----------------------------------------------
                0.00    0.00       1/1           genRand(int) [26]
[224]    0.0    0.00    0.00       1         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [224]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [196] _GLOBAL__sub_I__ZN9BenchMarkC2Ev [88] std::vector<int, std::allocator<int> >::max_size() const [23] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::pop_front()
 [197] __static_initialization_and_destruction_0(int, int) [207] std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocator() [16] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::push_back(BinTreeNode<int>* const&)
  [26] genRand(int)          [208] std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~allocator() [177] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::deque()
   [7] BinTree<int>::searchNode(BinTreeNode<int>*, int) [162] std::allocator<BinTreeNode<int>*>::allocator() [178] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~deque()
   [8] BinTree<int>::searchParentNode(BinTreeNode<int>*, int) [163] std::allocator<BinTreeNode<int>*>::~allocator() [24] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::pop()
   [4] BinTree<int>::bias(BinTreeNode<int>*) [84] std::allocator<BinTreeNode<int>**>::allocator<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*> const&) [17] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::push(BinTreeNode<int>* const&)
   [2] BinTree<int>::erase(int) [85] std::allocator<BinTreeNode<int>**>::~allocator() [51] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::front()
   [3] BinTree<int>::append(int) [209] std::allocator<int>::allocator() [179] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::queue<std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >, void>()
  [11] BinTree<int>::LeftMax(BinTreeNode<int>*) [210] std::allocator<int>::~allocator() [180] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::~queue()
  [20] BinTree<int>::Replace(BinTreeNode<int>*, BinTreeNode<int>*) [164] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::_Deque_impl() [181] std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point()
  [29] BinTree<int>::RotateL(BinTreeNode<int>*) [165] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_impl::~_Deque_impl() [192] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [28] BinTree<int>::RotateR(BinTreeNode<int>*) [106] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_map(unsigned long) [182] std::chrono::duration_values<long>::zero()
   [5] BinTree<int>::BalanceA(BinTreeNode<int>*) [166] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_create_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [193] std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
   [6] BinTree<int>::BalanceE(BinTreeNode<int>*) [60] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_allocate_node() [183] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::zero()
  [15] BinTree<int>::RotateLR(BinTreeNode<int>*) [167] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_nodes(BinTreeNode<int>***, BinTreeNode<int>***) [143] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  [19] BinTree<int>::RotateRL(BinTreeNode<int>*) [107] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_map(BinTreeNode<int>***, unsigned long) [194] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  [12] BinTree<int>::checkAVL() [168] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_initialize_map(unsigned long) [184] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
   [9] BinTree<int>::checkBin() [61] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_deallocate_node(BinTreeNode<int>**) [185] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [10] BinTree<int>::modHeight(BinTreeNode<int>*) [62] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() [186] void std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_realloc_insert<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
 [198] BinTree<int>::BinTree() [169] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_Deque_base() [187] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::end()
 [199] BinTree<int>::~BinTree() [170] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::~_Deque_base() [188] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::begin()
 [154] BenchMark::Lap()       [89] BinTreeNode<int>*** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<BinTreeNode<int>**>(BinTreeNode<int>** const*, BinTreeNode<int>** const*, BinTreeNode<int>***) [189] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::push_back(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
 [200] BenchMark::Start()    [139] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [220] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::vector()
 [190] BenchMark::getLap(long) [90] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [221] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~vector()
 [201] BenchMark::BenchMark() [150] void std::_Destroy_aux<true>::__destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [195] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::operator[](unsigned long)
 [202] BenchMark::~BenchMark() [110] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [13] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [155] __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [171] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_allocate(unsigned long) [31] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
 [156] __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::allocate(unsigned long, void const*) [211] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::_Vector_impl() [121] std::vector<int, std::allocator<int> >::end()
 [157] void __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [212] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_impl::~_Vector_impl() [122] std::vector<int, std::allocator<int> >::begin()
 [203] __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::new_allocator() [151] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_deallocate(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [14] std::vector<int, std::allocator<int> >::push_back(int&&)
 [204] __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::~new_allocator() [131] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() [222] std::vector<int, std::allocator<int> >::vector()
  [57] __gnu_cxx::new_allocator<BinTreeNode<int>*>::deallocate(BinTreeNode<int>**, unsigned long) [213] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_Vector_base() [223] std::vector<int, std::allocator<int> >::~vector()
  [47] void __gnu_cxx::new_allocator<BinTreeNode<int>*>::destroy<BinTreeNode<int>*>(BinTreeNode<int>**) [214] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::~_Vector_base() [41] std::vector<int, std::allocator<int> >::operator[](unsigned long)
  [58] __gnu_cxx::new_allocator<BinTreeNode<int>*>::allocate(unsigned long, void const*) [118] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [128] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>)
  [21] void __gnu_cxx::new_allocator<BinTreeNode<int>*>::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(BinTreeNode<int>**, BinTreeNode<int>* const&) [215] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [129] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__miter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
 [158] __gnu_cxx::new_allocator<BinTreeNode<int>*>::new_allocator() [216] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [73] BinTreeNode<int>*** std::__miter_base<BinTreeNode<int>***>(BinTreeNode<int>***)
 [159] __gnu_cxx::new_allocator<BinTreeNode<int>*>::~new_allocator() [111] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [74] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [103] __gnu_cxx::new_allocator<BinTreeNode<int>**>::deallocate(BinTreeNode<int>***, unsigned long) [77] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [75] int* std::__miter_base<int*>(int*)
 [104] __gnu_cxx::new_allocator<BinTreeNode<int>**>::allocate(unsigned long, void const*) [217] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [124] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__niter_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  [80] __gnu_cxx::new_allocator<BinTreeNode<int>**>::new_allocator() [218] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [67] BinTreeNode<int>*** std::__niter_base<BinTreeNode<int>***>(BinTreeNode<int>***)
  [81] __gnu_cxx::new_allocator<BinTreeNode<int>**>::~new_allocator() [127] std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::move_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [68] int* std::__niter_base<int*>(int*)
 [114] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [72] std::move_iterator<int*>::move_iterator(int*) [94] BinTreeNode<int>*** std::__copy_move_a<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
 [115] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [219] std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  [25] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [27] std::random_device::~random_device() [95] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
 [205] __gnu_cxx::new_allocator<int>::new_allocator() [52] std::random_device::operator()() [96] BinTreeNode<int>*** std::__copy_move_a2<false, BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
 [206] __gnu_cxx::new_allocator<int>::~new_allocator() [55] std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_M_set_node(BinTreeNode<int>***) [145] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__copy_move_a2<true, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
 [135] __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::__normal_iterator(std::chrono::duration<long, std::ratio<1l, 1000000000l> >* const&) [56] std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_S_buffer_size() [97] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  [86] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [42] std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&) [54] std::__deque_buf_size(unsigned long)
 [160] __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::difference_type __gnu_cxx::operator-<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >(__gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&, __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > > const&) [140] std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::_Deque_iterator() [146] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::uninitialized_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
 [116] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [172] std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::deallocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, unsigned long) [98] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [132] __gnu_cxx::new_allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::max_size() const [173] std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::allocate(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, unsigned long) [147] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy_a<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
  [59] __gnu_cxx::new_allocator<BinTreeNode<int>*>::max_size() const [141] std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [99] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [105] __gnu_cxx::new_allocator<BinTreeNode<int>**>::max_size() const [174] void std::allocator_traits<std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::construct<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [130] std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> std::__make_move_if_noexcept_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  [78] __gnu_cxx::new_allocator<int>::max_size() const [63] std::allocator_traits<std::allocator<BinTreeNode<int>*> >::deallocate(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, unsigned long) [76] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
 [125] __gnu_cxx::__normal_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > > >::base() const [49] void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::destroy<BinTreeNode<int>*>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**) [148] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_move_if_noexcept_a<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
  [70] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [64] std::allocator_traits<std::allocator<BinTreeNode<int>*> >::allocate(std::allocator<BinTreeNode<int>*>&, unsigned long) [100] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [82] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_Tp_allocator() const [22] void std::allocator_traits<std::allocator<BinTreeNode<int>*> >::construct<BinTreeNode<int>*, BinTreeNode<int>* const&>(std::allocator<BinTreeNode<int>*>&, BinTreeNode<int>**, BinTreeNode<int>* const&) [79] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [83] std::_Deque_base<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_get_map_allocator() const [108] std::allocator_traits<std::allocator<BinTreeNode<int>**> >::deallocate(std::allocator<BinTreeNode<int>**>&, BinTreeNode<int>***, unsigned long) [101] BinTreeNode<int>*** std::copy<BinTreeNode<int>***, BinTreeNode<int>***>(BinTreeNode<int>***, BinTreeNode<int>***, BinTreeNode<int>***)
 [136] std::_Vector_base<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_get_Tp_allocator() const [109] std::allocator_traits<std::allocator<BinTreeNode<int>**> >::allocate(std::allocator<BinTreeNode<int>**>&, unsigned long) [149] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
  [87] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [119] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [102] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
 [126] std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>::base() const [120] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [53] std::remove_reference<int&>::type&& std::move<int&>(int&)
  [71] std::move_iterator<int*>::base() const [91] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [133] std::chrono::duration<long, std::ratio<1l, 1000000000l> > const& std::forward<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>(std::remove_reference<std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&>::type&)
  [48] std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>::operator*() const [18] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [38] BinTreeNode<int>* const& std::forward<BinTreeNode<int>* const&>(std::remove_reference<BinTreeNode<int>* const&>::type&)
  [44] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::empty() const [142] std::chrono::duration<long, std::ratio<1l, 1000000000l> >* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::move_iterator<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*) [39] int&& std::forward<int>(std::remove_reference<int>::type&)
  [45] std::queue<BinTreeNode<int>*, std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> > >::empty() const [92] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [152] void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*>(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*)
 [137] std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [175] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_destroy_data(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>, std::allocator<BinTreeNode<int>*> const&) [153] void std::_Destroy<std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >*, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&)
 [134] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [65] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_pop_front_aux() [112] void std::_Destroy<int*>(int*, int*)
 [191] std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [30] void std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_push_back_aux<BinTreeNode<int>* const&>(BinTreeNode<int>* const&) [113] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [161] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::_M_check_len(unsigned long, char const*) const [93] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reallocate_map(unsigned long, bool) [46] bool std::operator==<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**>(std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&, std::_Deque_iterator<BinTreeNode<int>*, BinTreeNode<int>*&, BinTreeNode<int>**> const&)
 [123] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::size() const [66] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::_M_reserve_map_at_back(unsigned long) [224] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
 [138] std::vector<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::allocator<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > >::max_size() const [176] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::end() [40] operator new(unsigned long, void*)
 [117] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [43] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::begin()
  [69] std::vector<int, std::allocator<int> >::size() const [50] std::deque<BinTreeNode<int>*, std::allocator<BinTreeNode<int>*> >::front()
